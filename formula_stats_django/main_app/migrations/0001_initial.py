# Generated by Django 5.2 on 2025-05-09 21:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Constructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "constructors",
            },
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "abbreviation",
                    models.CharField(help_text="Official abbreviation", max_length=3),
                ),
            ],
            options={
                "db_table": "drivers",
            },
        ),
        migrations.CreateModel(
            name="Season",
            fields=[
                ("year", models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "seasons",
            },
        ),
        migrations.CreateModel(
            name="DriverRacingNumber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("racing_number", models.IntegerField()),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.driver",
                    ),
                ),
                (
                    "season_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.season",
                    ),
                ),
            ],
            options={
                "db_table": "driver_racing_numbers",
                "unique_together": {("driver", "season_year")},
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("round_number", models.IntegerField()),
                ("country", models.CharField(max_length=3, null=True)),
                ("location", models.CharField(max_length=60)),
                ("date_utc", models.DateField()),
                ("name", models.CharField()),
                ("format", models.CharField()),
                (
                    "season_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.season",
                    ),
                ),
            ],
            options={
                "db_table": "schedules",
            },
        ),
        migrations.CreateModel(
            name="ConstructorColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color_official",
                    models.CharField(help_text="Hexadecimal color code", max_length=7),
                ),
                (
                    "color_fastf1",
                    models.CharField(help_text="Hexadecimal color code", max_length=7),
                ),
                (
                    "constructor_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.constructor",
                    ),
                ),
                (
                    "season_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.season",
                    ),
                ),
            ],
            options={
                "db_table": "constructors_color",
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=50)),
                ("scheduled_start_timestamp_utc", models.DateTimeField()),
                ("actual_start_timestamp_utc", models.DateTimeField()),
                ("end_timestamp_utc", models.DateTimeField()),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.schedule",
                    ),
                ),
            ],
            options={
                "db_table": "sessions",
            },
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField(null=True)),
                ("classified_position", models.CharField(max_length=2, null=True)),
                ("grid_position", models.IntegerField(null=True)),
                ("q1", models.IntegerField(blank=True, null=True)),
                ("q2", models.IntegerField(blank=True, null=True)),
                ("q3", models.IntegerField(blank=True, null=True)),
                ("time", models.IntegerField(null=True)),
                ("status", models.CharField(null=True)),
                ("points", models.FloatField(null=True)),
                (
                    "constructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main_app.constructor",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main_app.driver",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.session",
                    ),
                ),
            ],
            options={
                "db_table": "results",
            },
        ),
        migrations.CreateModel(
            name="RaceControlMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lap", models.IntegerField(null=True)),
                ("date_time", models.DateTimeField()),
                ("category", models.CharField(max_length=100)),
                ("message", models.TextField()),
                ("status", models.CharField(max_length=100, null=True)),
                ("flag", models.CharField(max_length=50, null=True)),
                ("scope", models.CharField(max_length=100, null=True)),
                ("sector", models.IntegerField(null=True)),
                (
                    "driver_number",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.driverracingnumber",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.session",
                    ),
                ),
            ],
            options={
                "db_table": "race_control_msgs",
            },
        ),
        migrations.CreateModel(
            name="Lap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lap_number", models.IntegerField()),
                ("lap_time", models.IntegerField(help_text="Milliseconds", null=True)),
                ("stint", models.IntegerField(null=True)),
                ("pit_out_time", models.IntegerField(null=True)),
                ("pit_in_time", models.IntegerField(null=True)),
                ("sector_1_time", models.IntegerField(null=True)),
                ("sector_2_time", models.IntegerField(null=True)),
                ("sector_3_time", models.IntegerField(null=True)),
                ("sector_1_session_time", models.IntegerField(null=True)),
                ("sector_2_session_time", models.IntegerField(null=True)),
                ("sector_3_session_time", models.IntegerField(null=True)),
                ("speed_i1", models.FloatField(null=True)),
                ("speed_i2", models.FloatField(null=True)),
                ("speed_fl", models.FloatField(null=True)),
                ("speed_st", models.FloatField(null=True)),
                ("is_personal_best", models.BooleanField()),
                ("compound", models.CharField(max_length=50)),
                ("tyre_life", models.IntegerField(null=True)),
                ("fresh_tyre", models.BooleanField()),
                ("track_status", models.CharField(max_length=255)),
                ("position", models.IntegerField(null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_reason", models.TextField(blank=True, null=True)),
                ("fastf1_generated", models.BooleanField()),
                ("is_accurate", models.BooleanField()),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="main_app.driver",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.session",
                    ),
                ),
            ],
            options={
                "db_table": "laps",
            },
        ),
        migrations.CreateModel(
            name="TyreCompounds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                (
                    "color",
                    models.CharField(help_text="Hexadecimal color code", max_length=7),
                ),
                (
                    "season_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.season",
                    ),
                ),
            ],
            options={
                "db_table": "tyre_compounds",
            },
        ),
        migrations.CreateModel(
            name="Weather",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time_delta", models.IntegerField()),
                ("air_temp", models.FloatField()),
                ("track_temp", models.FloatField()),
                ("rainfall", models.BooleanField()),
                ("humidity", models.FloatField()),
                ("air_pressure", models.FloatField()),
                ("wind_speed", models.FloatField()),
                ("wind_direction", models.FloatField()),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.session",
                    ),
                ),
            ],
            options={
                "db_table": "weather",
            },
        ),
        migrations.CreateModel(
            name="CarData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("speed", models.IntegerField()),
                ("rpm", models.IntegerField()),
                ("gear", models.IntegerField()),
                ("throttle", models.IntegerField()),
                ("brake", models.BooleanField()),
                ("drs", models.IntegerField()),
                ("source", models.CharField(max_length=100, null=True)),
                ("time", models.IntegerField(null=True)),
                ("session_time", models.DurationField(null=True)),
                (
                    "lap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main_app.lap"
                    ),
                ),
            ],
            options={
                "db_table": "car_data",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("lap", "date"), name="unique_lap_datetime_car_data"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PositionData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("status", models.CharField(max_length=20)),
                ("x", models.IntegerField()),
                ("y", models.IntegerField()),
                ("z", models.IntegerField()),
                ("source", models.CharField(max_length=100, null=True)),
                ("time", models.IntegerField(null=True)),
                ("session_time", models.DurationField(null=True)),
                (
                    "lap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main_app.lap"
                    ),
                ),
            ],
            options={
                "db_table": "pos_data",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("lap", "date"), name="unique_lap_datetime_pos_data"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Telemetry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(null=True)),
                ("session_time", models.DurationField(null=True)),
                ("time", models.IntegerField(null=True)),
                ("rpm", models.FloatField(null=True)),
                ("speed", models.FloatField(null=True)),
                ("n_gear", models.IntegerField(null=True)),
                ("throttle", models.FloatField(null=True)),
                ("brake", models.BooleanField(null=True)),
                ("drs", models.CharField(null=True)),
                ("source", models.CharField(max_length=100, null=True)),
                ("status", models.CharField(null=True)),
                ("x", models.FloatField(null=True)),
                ("y", models.FloatField(null=True)),
                ("z", models.FloatField(null=True)),
                ("differential_distance", models.FloatField(null=True)),
                ("distance", models.FloatField(null=True)),
                ("driver_ahead", models.IntegerField(null=True)),
                ("distance_to_driver_ahead", models.FloatField(null=True)),
                ("relative_distance", models.FloatField(null=True)),
                (
                    "lap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main_app.lap"
                    ),
                ),
            ],
            options={
                "db_table": "telemetry",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("lap", "date"),
                        name="unique_lap_datetime_telemetry_data",
                    )
                ],
            },
        ),
    ]
